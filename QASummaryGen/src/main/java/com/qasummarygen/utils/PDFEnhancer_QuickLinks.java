package com.qasummarygen.utils;

import com.lowagie.text.*;
import com.lowagie.text.pdf.*;

import java.awt.Color;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.util.List;

/**
 * Utility to add a Quick Links page at the start of an existing PDF.
 * Works with the output generated by PDFReportUtility.
 */
public class PDFEnhancer_QuickLinks {

    public static List<String> addQuickLinksToPDF(String originalPdfPath, String enhancedPdfPath) {
        try {
            // Read original PDF
            PdfReader reader = new PdfReader(originalPdfPath);

            // Prepare new document to write enhanced PDF
            Document document = new Document();
            PdfCopy copy = new PdfCopy(document, new FileOutputStream(enhancedPdfPath));
            document.open();

            // Create in-memory doc for Quick Links page
            Document introDoc = new Document();
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            PdfWriter tempWriter = PdfWriter.getInstance(introDoc, baos);
            introDoc.open();

            // Fonts - Helvetica without emoji issue
            Font headerFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14, Color.BLACK);
            Font linkFont = FontFactory.getFont(FontFactory.HELVETICA, 12, Color.BLUE);

            // Title
            Paragraph title = new Paragraph("Quick Links", headerFont);
            title.setSpacingAfter(15f);
            introDoc.add(title);

            // Add Links - You can customize these
            addLink(introDoc, "Release Confluence Page", "https://your-confluence-url", linkFont);
            addLink(introDoc, "JIRA Board", "https://your-jira-board-url", linkFont);
            addLink(introDoc, "JIRA XRay Report", "https://your-jira-xray-url", linkFont);

            introDoc.close();

            // Convert intro page to PDF and add as first page
            PdfReader introReader = new PdfReader(baos.toByteArray());
            PdfImportedPage introPage = copy.getImportedPage(introReader, 1);
            copy.addPage(introPage);

            // Append all original pages
            for (int i = 1; i <= reader.getNumberOfPages(); i++) {
                copy.addPage(copy.getImportedPage(reader, i));
            }

            // Close everything
            document.close();
            reader.close();
            introReader.close();

            System.out.println("✅ PDF with quick links generated: " + enhancedPdfPath);

        } catch (Exception e) {
            System.err.println("❌ Error adding quick links to PDF: " + e.getMessage());
            e.printStackTrace();
        }
		return null;
    }

    /**
     * Helper to add an anchor link to the intro PDF.
     */
    private static void addLink(Document doc, String text, String url, Font font) throws DocumentException {
        Anchor link = new Anchor(text, font);
        link.setReference(url);
        doc.add(link);
        doc.add(Chunk.NEWLINE);
    }
}
